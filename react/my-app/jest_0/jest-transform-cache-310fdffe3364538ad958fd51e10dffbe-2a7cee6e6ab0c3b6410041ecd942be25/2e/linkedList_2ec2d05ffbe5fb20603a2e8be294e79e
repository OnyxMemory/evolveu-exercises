aad49c9b994905bcf7f9c1c524c3f9ff
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

class LinkedList {
  constructor(value) {
    this.head = new Node(value, null);
    this.current = this.head;
    this.tail = this.head;
  }

  play(str) {
    //console.log(str);
    return str;
  }

  show() {
    let retString, pointer;
    retString = '';
    pointer = this.head;

    while (pointer) {
      retString += pointer.value + " ";
      pointer = pointer.next;
    }

    return retString;
  }

  insert(value) {
    let node = new Node(value, null);

    if (this.current.next) {
      let temp = this.current.next;
      node.next = temp;
      this.current.next = node;
    } else {
      this.current.next = node;
      this.tail = node;
    }
  }

  add(value) {
    let node = new Node(value, null); //1,2 3

    this.tail.next = node; // 3.next = 4;

    this.tail = node; // this.tail = 4;
  }

  move() {
    if (this.current.next) {
      this.current = this.current.next;
    }
  }

  getCurrent() {
    return this.current;
  }

}

class Node {
  constructor(value, next) {
    this.value = value;
    this.next = next;
  }

}

var _default = {
  LinkedList,
  Node
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmtlZExpc3QuanMiXSwibmFtZXMiOlsiTGlua2VkTGlzdCIsImNvbnN0cnVjdG9yIiwidmFsdWUiLCJoZWFkIiwiTm9kZSIsImN1cnJlbnQiLCJ0YWlsIiwicGxheSIsInN0ciIsInNob3ciLCJyZXRTdHJpbmciLCJwb2ludGVyIiwibmV4dCIsImluc2VydCIsIm5vZGUiLCJ0ZW1wIiwiYWRkIiwibW92ZSIsImdldEN1cnJlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQyxNQUFNQSxVQUFOLENBQWlCO0FBQ2hCQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBTztBQUNqQixTQUFLQyxJQUFMLEdBQVUsSUFBSUMsSUFBSixDQUFTRixLQUFULEVBQWdCLElBQWhCLENBQVY7QUFDQSxTQUFLRyxPQUFMLEdBQWUsS0FBS0YsSUFBcEI7QUFDQSxTQUFLRyxJQUFMLEdBQVksS0FBS0gsSUFBakI7QUFDQTs7QUFFRkksRUFBQUEsSUFBSSxDQUFDQyxHQUFELEVBQU07QUFDVDtBQUNBLFdBQU9BLEdBQVA7QUFDQTs7QUFDREMsRUFBQUEsSUFBSSxHQUFHO0FBQ04sUUFBSUMsU0FBSixFQUFlQyxPQUFmO0FBQ0FELElBQUFBLFNBQVMsR0FBRyxFQUFaO0FBQ0FDLElBQUFBLE9BQU8sR0FBRyxLQUFLUixJQUFmOztBQUNBLFdBQU1RLE9BQU4sRUFBZTtBQUNkRCxNQUFBQSxTQUFTLElBQUlDLE9BQU8sQ0FBQ1QsS0FBUixHQUFnQixHQUE3QjtBQUNBUyxNQUFBQSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0MsSUFBbEI7QUFDQTs7QUFDRCxXQUFPRixTQUFQO0FBQ0E7O0FBQ0RHLEVBQUFBLE1BQU0sQ0FBQ1gsS0FBRCxFQUFRO0FBQ2IsUUFBSVksSUFBSSxHQUFHLElBQUlWLElBQUosQ0FBU0YsS0FBVCxFQUFlLElBQWYsQ0FBWDs7QUFDQSxRQUFHLEtBQUtHLE9BQUwsQ0FBYU8sSUFBaEIsRUFBcUI7QUFDcEIsVUFBSUcsSUFBSSxHQUFHLEtBQUtWLE9BQUwsQ0FBYU8sSUFBeEI7QUFDQUUsTUFBQUEsSUFBSSxDQUFDRixJQUFMLEdBQVlHLElBQVo7QUFDQSxXQUFLVixPQUFMLENBQWFPLElBQWIsR0FBb0JFLElBQXBCO0FBQ0EsS0FKRCxNQUlPO0FBQ04sV0FBS1QsT0FBTCxDQUFhTyxJQUFiLEdBQWtCRSxJQUFsQjtBQUNBLFdBQUtSLElBQUwsR0FBWVEsSUFBWjtBQUVBO0FBRUQ7O0FBQ0RFLEVBQUFBLEdBQUcsQ0FBQ2QsS0FBRCxFQUFRO0FBQ1YsUUFBSVksSUFBSSxHQUFHLElBQUlWLElBQUosQ0FBU0YsS0FBVCxFQUFlLElBQWYsQ0FBWCxDQURVLENBQ3dCOztBQUNsQyxTQUFLSSxJQUFMLENBQVVNLElBQVYsR0FBaUJFLElBQWpCLENBRlUsQ0FFYzs7QUFDeEIsU0FBS1IsSUFBTCxHQUFZUSxJQUFaLENBSFUsQ0FHVTtBQUNwQjs7QUFFREcsRUFBQUEsSUFBSSxHQUFHO0FBQ04sUUFBSSxLQUFLWixPQUFMLENBQWFPLElBQWpCLEVBQXNCO0FBQ3JCLFdBQUtQLE9BQUwsR0FBZSxLQUFLQSxPQUFMLENBQWFPLElBQTVCO0FBQ0E7QUFDRDs7QUFFRE0sRUFBQUEsVUFBVSxHQUFHO0FBQ1osV0FBTyxLQUFLYixPQUFaO0FBQ0E7O0FBaERnQjs7QUFtRGxCLE1BQU1ELElBQU4sQ0FBVztBQUNWSCxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUVUsSUFBUixFQUFjO0FBQ3hCLFNBQUtWLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtVLElBQUwsR0FBWUEsSUFBWjtBQUNBOztBQUpTOztlQU9JO0FBQUNaLEVBQUFBLFVBQUQ7QUFBYUksRUFBQUE7QUFBYixDIiwic291cmNlc0NvbnRlbnQiOlsiIGNsYXNzIExpbmtlZExpc3Qge1xuIFx0Y29uc3RydWN0b3IodmFsdWUpe1xuIFx0XHR0aGlzLmhlYWQ9bmV3IE5vZGUodmFsdWUsIG51bGwpO1xuIFx0XHR0aGlzLmN1cnJlbnQgPSB0aGlzLmhlYWQ7XG4gXHRcdHRoaXMudGFpbCA9IHRoaXMuaGVhZDsgXG4gXHR9XG5cblx0cGxheShzdHIpIHtcblx0XHQvL2NvbnNvbGUubG9nKHN0cik7XG5cdFx0cmV0dXJuIHN0cjtcblx0fVxuXHRzaG93KCkge1xuXHRcdGxldCByZXRTdHJpbmcsIHBvaW50ZXI7XG5cdFx0cmV0U3RyaW5nID0gJyc7XG5cdFx0cG9pbnRlciA9IHRoaXMuaGVhZDtcblx0XHR3aGlsZShwb2ludGVyKSB7XG5cdFx0XHRyZXRTdHJpbmcgKz0gcG9pbnRlci52YWx1ZSArIFwiIFwiO1xuXHRcdFx0cG9pbnRlciA9IHBvaW50ZXIubmV4dDtcblx0XHR9XG5cdFx0cmV0dXJuIHJldFN0cmluZztcblx0fVxuXHRpbnNlcnQodmFsdWUpIHtcblx0XHRsZXQgbm9kZSA9IG5ldyBOb2RlKHZhbHVlLG51bGwpO1xuXHRcdGlmKHRoaXMuY3VycmVudC5uZXh0KXtcblx0XHRcdGxldCB0ZW1wID0gdGhpcy5jdXJyZW50Lm5leHQ7XG5cdFx0XHRub2RlLm5leHQgPSB0ZW1wO1xuXHRcdFx0dGhpcy5jdXJyZW50Lm5leHQgPSBub2RlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLmN1cnJlbnQubmV4dD1ub2RlO1xuXHRcdFx0dGhpcy50YWlsID0gbm9kZTtcblxuXHRcdH1cblxuXHR9XG5cdGFkZCh2YWx1ZSkge1xuXHRcdGxldCBub2RlID0gbmV3IE5vZGUodmFsdWUsbnVsbCk7ICAvLzEsMiAzXG5cdFx0dGhpcy50YWlsLm5leHQgPSBub2RlO1x0XHQvLyAzLm5leHQgPSA0O1xuXHRcdHRoaXMudGFpbCA9IG5vZGU7XHRcdFx0Ly8gdGhpcy50YWlsID0gNDtcblx0fVxuXG5cdG1vdmUoKSB7XG5cdFx0aWYgKHRoaXMuY3VycmVudC5uZXh0KXtcblx0XHRcdHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5uZXh0O1xuXHRcdH1cblx0fVxuXG5cdGdldEN1cnJlbnQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY3VycmVudDtcblx0fVxufSBcblxuY2xhc3MgTm9kZSB7XG5cdGNvbnN0cnVjdG9yKHZhbHVlLCBuZXh0KSB7XG5cdFx0dGhpcy52YWx1ZSA9IHZhbHVlO1xuXHRcdHRoaXMubmV4dCA9IG5leHQ7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge0xpbmtlZExpc3QsIE5vZGV9O1xuXG4iXX0=