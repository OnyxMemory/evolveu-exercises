3d1cdb5f4a5c3cdad066ba199883c0e2
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

class LinkedList {
  constructor(value) {
    this.head = new Node(value, null);
    this.current = this.head;
    this.tail = this.head;
  }

  play(str) {
    //console.log(str);
    return str;
  }

  show() {
    let retString, pointer;
    retString = '';
    pointer = this.head;

    while (pointer) {
      retString += pointer.value + " ";
      pointer = pointer.next;
    }

    return retString;
  }

  insert(value) {
    let node = new Node(value, null);

    if (this.current.next) {
      let temp = this.current.next;
      node.next = temp;
      this.current.next = node;
    } else {
      this.current.next = node;
    }
  }

  add(value) {
    let node = new Node(value, null); //1,2 3

    this.tail.next = node; // 3.next = 4;

    this.tail = node; // this.tail = 4;
  }

  move() {
    if (this.current.next) {
      this.current = this.current.next;
    }
  }

  getCurrent() {
    return this.current;
  }

}

class Node {
  constructor(value, next) {
    this.value = value;
    this.next = next;
  }

}

var _default = {
  LinkedList,
  Node
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmtlZExpc3QuanMiXSwibmFtZXMiOlsiTGlua2VkTGlzdCIsImNvbnN0cnVjdG9yIiwidmFsdWUiLCJoZWFkIiwiTm9kZSIsImN1cnJlbnQiLCJ0YWlsIiwicGxheSIsInN0ciIsInNob3ciLCJyZXRTdHJpbmciLCJwb2ludGVyIiwibmV4dCIsImluc2VydCIsIm5vZGUiLCJ0ZW1wIiwiYWRkIiwibW92ZSIsImdldEN1cnJlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQyxNQUFNQSxVQUFOLENBQWlCO0FBQ2hCQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBTztBQUNqQixTQUFLQyxJQUFMLEdBQVUsSUFBSUMsSUFBSixDQUFTRixLQUFULEVBQWdCLElBQWhCLENBQVY7QUFDQSxTQUFLRyxPQUFMLEdBQWUsS0FBS0YsSUFBcEI7QUFDQSxTQUFLRyxJQUFMLEdBQVksS0FBS0gsSUFBakI7QUFDQTs7QUFFRkksRUFBQUEsSUFBSSxDQUFDQyxHQUFELEVBQU07QUFDVDtBQUNBLFdBQU9BLEdBQVA7QUFDQTs7QUFDREMsRUFBQUEsSUFBSSxHQUFHO0FBQ04sUUFBSUMsU0FBSixFQUFlQyxPQUFmO0FBQ0FELElBQUFBLFNBQVMsR0FBRyxFQUFaO0FBQ0FDLElBQUFBLE9BQU8sR0FBRyxLQUFLUixJQUFmOztBQUNBLFdBQU1RLE9BQU4sRUFBZTtBQUNkRCxNQUFBQSxTQUFTLElBQUlDLE9BQU8sQ0FBQ1QsS0FBUixHQUFnQixHQUE3QjtBQUNBUyxNQUFBQSxPQUFPLEdBQUdBLE9BQU8sQ0FBQ0MsSUFBbEI7QUFDQTs7QUFDRCxXQUFPRixTQUFQO0FBQ0E7O0FBQ0RHLEVBQUFBLE1BQU0sQ0FBQ1gsS0FBRCxFQUFRO0FBQ2IsUUFBSVksSUFBSSxHQUFHLElBQUlWLElBQUosQ0FBU0YsS0FBVCxFQUFlLElBQWYsQ0FBWDs7QUFDQSxRQUFHLEtBQUtHLE9BQUwsQ0FBYU8sSUFBaEIsRUFBcUI7QUFDcEIsVUFBSUcsSUFBSSxHQUFHLEtBQUtWLE9BQUwsQ0FBYU8sSUFBeEI7QUFDQUUsTUFBQUEsSUFBSSxDQUFDRixJQUFMLEdBQVlHLElBQVo7QUFDQSxXQUFLVixPQUFMLENBQWFPLElBQWIsR0FBb0JFLElBQXBCO0FBQ0EsS0FKRCxNQUlPO0FBQ04sV0FBS1QsT0FBTCxDQUFhTyxJQUFiLEdBQWtCRSxJQUFsQjtBQUVBO0FBRUQ7O0FBQ0RFLEVBQUFBLEdBQUcsQ0FBQ2QsS0FBRCxFQUFRO0FBQ1YsUUFBSVksSUFBSSxHQUFHLElBQUlWLElBQUosQ0FBU0YsS0FBVCxFQUFlLElBQWYsQ0FBWCxDQURVLENBQ3dCOztBQUNsQyxTQUFLSSxJQUFMLENBQVVNLElBQVYsR0FBaUJFLElBQWpCLENBRlUsQ0FFYzs7QUFDeEIsU0FBS1IsSUFBTCxHQUFZUSxJQUFaLENBSFUsQ0FHVTtBQUNwQjs7QUFFREcsRUFBQUEsSUFBSSxHQUFHO0FBQ04sUUFBSSxLQUFLWixPQUFMLENBQWFPLElBQWpCLEVBQXNCO0FBQ3JCLFdBQUtQLE9BQUwsR0FBZSxLQUFLQSxPQUFMLENBQWFPLElBQTVCO0FBQ0E7QUFDRDs7QUFFRE0sRUFBQUEsVUFBVSxHQUFHO0FBQ1osV0FBTyxLQUFLYixPQUFaO0FBQ0E7O0FBL0NnQjs7QUFrRGxCLE1BQU1ELElBQU4sQ0FBVztBQUNWSCxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUVUsSUFBUixFQUFjO0FBQ3hCLFNBQUtWLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtVLElBQUwsR0FBWUEsSUFBWjtBQUNBOztBQUpTOztlQU9JO0FBQUNaLEVBQUFBLFVBQUQ7QUFBYUksRUFBQUE7QUFBYixDIiwic291cmNlc0NvbnRlbnQiOlsiIGNsYXNzIExpbmtlZExpc3Qge1xuIFx0Y29uc3RydWN0b3IodmFsdWUpe1xuIFx0XHR0aGlzLmhlYWQ9bmV3IE5vZGUodmFsdWUsIG51bGwpO1xuIFx0XHR0aGlzLmN1cnJlbnQgPSB0aGlzLmhlYWQ7XG4gXHRcdHRoaXMudGFpbCA9IHRoaXMuaGVhZDtcbiBcdH1cblxuXHRwbGF5KHN0cikge1xuXHRcdC8vY29uc29sZS5sb2coc3RyKTtcblx0XHRyZXR1cm4gc3RyO1xuXHR9XG5cdHNob3coKSB7XG5cdFx0bGV0IHJldFN0cmluZywgcG9pbnRlcjtcblx0XHRyZXRTdHJpbmcgPSAnJztcblx0XHRwb2ludGVyID0gdGhpcy5oZWFkO1xuXHRcdHdoaWxlKHBvaW50ZXIpIHtcblx0XHRcdHJldFN0cmluZyArPSBwb2ludGVyLnZhbHVlICsgXCIgXCI7XG5cdFx0XHRwb2ludGVyID0gcG9pbnRlci5uZXh0O1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0U3RyaW5nO1xuXHR9XG5cdGluc2VydCh2YWx1ZSkge1xuXHRcdGxldCBub2RlID0gbmV3IE5vZGUodmFsdWUsbnVsbCk7XG5cdFx0aWYodGhpcy5jdXJyZW50Lm5leHQpe1xuXHRcdFx0bGV0IHRlbXAgPSB0aGlzLmN1cnJlbnQubmV4dDtcblx0XHRcdG5vZGUubmV4dCA9IHRlbXA7XG5cdFx0XHR0aGlzLmN1cnJlbnQubmV4dCA9IG5vZGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuY3VycmVudC5uZXh0PW5vZGU7XG5cblx0XHR9XG5cblx0fVxuXHRhZGQodmFsdWUpIHtcblx0XHRsZXQgbm9kZSA9IG5ldyBOb2RlKHZhbHVlLG51bGwpOyAgLy8xLDIgM1xuXHRcdHRoaXMudGFpbC5uZXh0ID0gbm9kZTtcdFx0Ly8gMy5uZXh0ID0gNDtcblx0XHR0aGlzLnRhaWwgPSBub2RlO1x0XHRcdC8vIHRoaXMudGFpbCA9IDQ7XG5cdH1cblxuXHRtb3ZlKCkge1xuXHRcdGlmICh0aGlzLmN1cnJlbnQubmV4dCl7XG5cdFx0XHR0aGlzLmN1cnJlbnQgPSB0aGlzLmN1cnJlbnQubmV4dDtcblx0XHR9XG5cdH1cblxuXHRnZXRDdXJyZW50KCkge1xuXHRcdHJldHVybiB0aGlzLmN1cnJlbnQ7XG5cdH1cbn0gXG5cbmNsYXNzIE5vZGUge1xuXHRjb25zdHJ1Y3Rvcih2YWx1ZSwgbmV4dCkge1xuXHRcdHRoaXMudmFsdWUgPSB2YWx1ZTtcblx0XHR0aGlzLm5leHQgPSBuZXh0O1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtMaW5rZWRMaXN0LCBOb2RlfTtcblxuIl19