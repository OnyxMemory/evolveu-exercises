67c910787c28a2ca0c822c91548dfae0
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

class LinkedList {
  constructor(value) {
    this.head = new Node(value, null);
    this.current = this.head;
    this.tail = this.head;
  }

  play(str) {
    //console.log(str);
    return str;
  }

  show() {
    let retString, pointer;
    pointer = this.head;

    while (pointer) {
      retString = pointer.value + " ";
      console.log(retString);
      pointer = pointer.next;
    }

    return retString;
  }

  insert(value) {
    let node = new Node(value, null);

    if (this.current.next) {
      let temp = this.current.next;
      node.next = temp;
      this.current.next = node;
    } else {
      this.current.next = node;
    }
  }

  add(value) {
    let node = new Node(value, null); //1,2 3

    this.tail.next = node; // 3.next = 4;

    this.tail = node; // this.tail = 4;
  }

  move() {
    if (this.current.next) {
      this.current = this.current.next;
    }
  }

  getCurrent() {
    return this.current;
  }

}

class Node {
  constructor(value, next) {
    this.value = value;
    this.next = next;
  }

}

var _default = {
  LinkedList,
  Node
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmtlZExpc3QuanMiXSwibmFtZXMiOlsiTGlua2VkTGlzdCIsImNvbnN0cnVjdG9yIiwidmFsdWUiLCJoZWFkIiwiTm9kZSIsImN1cnJlbnQiLCJ0YWlsIiwicGxheSIsInN0ciIsInNob3ciLCJyZXRTdHJpbmciLCJwb2ludGVyIiwiY29uc29sZSIsImxvZyIsIm5leHQiLCJpbnNlcnQiLCJub2RlIiwidGVtcCIsImFkZCIsIm1vdmUiLCJnZXRDdXJyZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUMsTUFBTUEsVUFBTixDQUFpQjtBQUNoQkMsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQU87QUFDakIsU0FBS0MsSUFBTCxHQUFVLElBQUlDLElBQUosQ0FBU0YsS0FBVCxFQUFnQixJQUFoQixDQUFWO0FBQ0EsU0FBS0csT0FBTCxHQUFlLEtBQUtGLElBQXBCO0FBQ0EsU0FBS0csSUFBTCxHQUFZLEtBQUtILElBQWpCO0FBQ0E7O0FBRUZJLEVBQUFBLElBQUksQ0FBQ0MsR0FBRCxFQUFNO0FBQ1Q7QUFDQSxXQUFPQSxHQUFQO0FBQ0E7O0FBQ0RDLEVBQUFBLElBQUksR0FBRztBQUNOLFFBQUlDLFNBQUosRUFBZUMsT0FBZjtBQUNBQSxJQUFBQSxPQUFPLEdBQUcsS0FBS1IsSUFBZjs7QUFDQSxXQUFNUSxPQUFOLEVBQWU7QUFDZEQsTUFBQUEsU0FBUyxHQUFHQyxPQUFPLENBQUNULEtBQVIsR0FBZ0IsR0FBNUI7QUFDQVUsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlILFNBQVo7QUFDQUMsTUFBQUEsT0FBTyxHQUFHQSxPQUFPLENBQUNHLElBQWxCO0FBQ0E7O0FBQ0QsV0FBT0osU0FBUDtBQUNBOztBQUNESyxFQUFBQSxNQUFNLENBQUNiLEtBQUQsRUFBUTtBQUNiLFFBQUljLElBQUksR0FBRyxJQUFJWixJQUFKLENBQVNGLEtBQVQsRUFBZSxJQUFmLENBQVg7O0FBQ0EsUUFBRyxLQUFLRyxPQUFMLENBQWFTLElBQWhCLEVBQXFCO0FBQ3BCLFVBQUlHLElBQUksR0FBRyxLQUFLWixPQUFMLENBQWFTLElBQXhCO0FBQ0FFLE1BQUFBLElBQUksQ0FBQ0YsSUFBTCxHQUFZRyxJQUFaO0FBQ0EsV0FBS1osT0FBTCxDQUFhUyxJQUFiLEdBQW9CRSxJQUFwQjtBQUNBLEtBSkQsTUFJTztBQUNOLFdBQUtYLE9BQUwsQ0FBYVMsSUFBYixHQUFrQkUsSUFBbEI7QUFFQTtBQUVEOztBQUNERSxFQUFBQSxHQUFHLENBQUNoQixLQUFELEVBQVE7QUFDVixRQUFJYyxJQUFJLEdBQUcsSUFBSVosSUFBSixDQUFTRixLQUFULEVBQWUsSUFBZixDQUFYLENBRFUsQ0FDd0I7O0FBQ2xDLFNBQUtJLElBQUwsQ0FBVVEsSUFBVixHQUFpQkUsSUFBakIsQ0FGVSxDQUVjOztBQUN4QixTQUFLVixJQUFMLEdBQVlVLElBQVosQ0FIVSxDQUdVO0FBQ3BCOztBQUVERyxFQUFBQSxJQUFJLEdBQUc7QUFDTixRQUFJLEtBQUtkLE9BQUwsQ0FBYVMsSUFBakIsRUFBc0I7QUFDckIsV0FBS1QsT0FBTCxHQUFlLEtBQUtBLE9BQUwsQ0FBYVMsSUFBNUI7QUFDQTtBQUNEOztBQUVETSxFQUFBQSxVQUFVLEdBQUc7QUFDWixXQUFPLEtBQUtmLE9BQVo7QUFDQTs7QUEvQ2dCOztBQWtEbEIsTUFBTUQsSUFBTixDQUFXO0FBQ1ZILEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRWSxJQUFSLEVBQWM7QUFDeEIsU0FBS1osS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS1ksSUFBTCxHQUFZQSxJQUFaO0FBQ0E7O0FBSlM7O2VBT0k7QUFBQ2QsRUFBQUEsVUFBRDtBQUFhSSxFQUFBQTtBQUFiLEMiLCJzb3VyY2VzQ29udGVudCI6WyIgY2xhc3MgTGlua2VkTGlzdCB7XG4gXHRjb25zdHJ1Y3Rvcih2YWx1ZSl7XG4gXHRcdHRoaXMuaGVhZD1uZXcgTm9kZSh2YWx1ZSwgbnVsbCk7XG4gXHRcdHRoaXMuY3VycmVudCA9IHRoaXMuaGVhZDtcbiBcdFx0dGhpcy50YWlsID0gdGhpcy5oZWFkO1xuIFx0fVxuXG5cdHBsYXkoc3RyKSB7XG5cdFx0Ly9jb25zb2xlLmxvZyhzdHIpO1xuXHRcdHJldHVybiBzdHI7XG5cdH1cblx0c2hvdygpIHtcblx0XHRsZXQgcmV0U3RyaW5nLCBwb2ludGVyO1xuXHRcdHBvaW50ZXIgPSB0aGlzLmhlYWQ7XG5cdFx0d2hpbGUocG9pbnRlcikge1xuXHRcdFx0cmV0U3RyaW5nID0gcG9pbnRlci52YWx1ZSArIFwiIFwiO1xuXHRcdFx0Y29uc29sZS5sb2cocmV0U3RyaW5nKTtcblx0XHRcdHBvaW50ZXIgPSBwb2ludGVyLm5leHQ7XG5cdFx0fVxuXHRcdHJldHVybiByZXRTdHJpbmc7XG5cdH1cblx0aW5zZXJ0KHZhbHVlKSB7XG5cdFx0bGV0IG5vZGUgPSBuZXcgTm9kZSh2YWx1ZSxudWxsKTtcblx0XHRpZih0aGlzLmN1cnJlbnQubmV4dCl7XG5cdFx0XHRsZXQgdGVtcCA9IHRoaXMuY3VycmVudC5uZXh0O1xuXHRcdFx0bm9kZS5uZXh0ID0gdGVtcDtcblx0XHRcdHRoaXMuY3VycmVudC5uZXh0ID0gbm9kZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5jdXJyZW50Lm5leHQ9bm9kZTtcblxuXHRcdH1cblxuXHR9XG5cdGFkZCh2YWx1ZSkge1xuXHRcdGxldCBub2RlID0gbmV3IE5vZGUodmFsdWUsbnVsbCk7ICAvLzEsMiAzXG5cdFx0dGhpcy50YWlsLm5leHQgPSBub2RlO1x0XHQvLyAzLm5leHQgPSA0O1xuXHRcdHRoaXMudGFpbCA9IG5vZGU7XHRcdFx0Ly8gdGhpcy50YWlsID0gNDtcblx0fVxuXG5cdG1vdmUoKSB7XG5cdFx0aWYgKHRoaXMuY3VycmVudC5uZXh0KXtcblx0XHRcdHRoaXMuY3VycmVudCA9IHRoaXMuY3VycmVudC5uZXh0O1xuXHRcdH1cblx0fVxuXG5cdGdldEN1cnJlbnQoKSB7XG5cdFx0cmV0dXJuIHRoaXMuY3VycmVudDtcblx0fVxufSBcblxuY2xhc3MgTm9kZSB7XG5cdGNvbnN0cnVjdG9yKHZhbHVlLCBuZXh0KSB7XG5cdFx0dGhpcy52YWx1ZSA9IHZhbHVlO1xuXHRcdHRoaXMubmV4dCA9IG5leHQ7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge0xpbmtlZExpc3QsIE5vZGV9O1xuXG4iXX0=